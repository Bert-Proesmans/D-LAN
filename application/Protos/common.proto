/**
  * Some common messages.
  * Version : 1
  * All string are encoded in UTF-8.
  */

package Protos.Common;

message Error {
   optional string message = 1;
}

// For identify a chunk or a user.
message Hash {
   optional bytes hash = 1; // 20 bytes. If it doesn't exist the hash is null.
}

// A shared directory matches an existing handle, thus there is no need to have the complete path to it.
message SharedDir {
   required Hash id = 1; // Identify a shared directory.
   optional string shared_name = 2; // An optional name to identify the shared directory by human. It may correspond to the name of the shared directory itself.   
}

// Used for a directory or a file.
message Entry {
   optional SharedDir shared_dir = 1; // Identify the shared directory.
   required string path = 2; // Relative path from the sharing directory. For example : "/Videos/My cat". A root directory has an empty path : "".
   required string name = 3; // Directory name or file name. For example : "MyLOLCat.avi". A root directory has an undetermined name.
   required uint64 size = 4; // [bytes].
}

message FileEntry {
   required Entry file = 1;
   repeated Hash chunk = 2; // No chunk means that the peer doesn't know the hashes.
}

// A result following a search.
// See 'Network.Find' and 'GUI.GUINetwork' for more information.
message FindResult {
   message DirEntryLevel {
      required uint32 level = 1;
      required Entry dir = 2;
   }
   message FileEntryLevel {
      required uint32 level = 1;
      required FileEntry file = 2;
   }
   required uint64 tag = 1;
   required Common.Hash peer_id = 2;
   repeated DirEntryLevel dir = 3;
   repeated FileEntryLevel file = 4;
}

// Core settings
message Settings {     
   optional string nick = 1;
   optional Common.Hash peerID = 2;
}
